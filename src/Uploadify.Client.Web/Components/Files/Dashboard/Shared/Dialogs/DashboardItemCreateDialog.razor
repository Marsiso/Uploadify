@using Uploadify.Client.Domain.Resources.Models
@using Uploadify.Client.Web.Components.Shared.Dialogs
@using Uploadify.Client.Web.Components.Shared
@using Uploadify.Client.Application.Files.Services
@using Uploadify.Client.Application.Files.Models

@inject FolderService FolderService
@inject IStringLocalizer Localizer

<Dialog IsVisible="@IsVisible" Title="@Localizer[Translations.Components.Files.Dialogs.Create.Title]" OnClose="@(() => IsVisible = false)">
    <Content>
        <MudTabs>
            <MudTabPanel Icon="@Icons.Material.Rounded.Folder" Text="@Localizer[Translations.Components.Files.Dialogs.Create.FoldersTab]">
                <ChildContent>
                    <MudForm Errors="@(ResourceResponse?.ErrorMessages ?? Array.Empty<string>())">
                        <MudStack Spacing="5" Class="pt-5">
                            <MudTextField @bind-Value="@Name"
                                          DebounceInterval="100"
                                          Error="@(ResourceResponse is { ErrorMessages.Length: > 0 })"
                                          ErrorText="@ResourceResponse?.ErrorMessages.FirstOrDefault()"
                                          Variant="@Variant.Outlined"
                                          Label="@Localizer[Translations.Components.Files.Dialogs.Rename.NameLabel]"
                                          OnDebounceIntervalElapsed="@HandleDebounceIntervalElapsed"/>

                            <PrimaryButton IsDisabled="@(IsLoading || IsDisabled)"
                                           IsLoading="@IsLoading"
                                           FullWidth
                                           Color="@Color.Success"
                                           OnClick="@HandleSubmit"
                                           Size="@Size.Large"
                                           Text="@Localizer[Translations.Components.Files.Dialogs.Create.SubmitButton]"/>
                        </MudStack>
                    </MudForm>
                </ChildContent>
            </MudTabPanel>
            <MudTabPanel Icon="@Icons.Material.Rounded.Image" Text="@Localizer[Translations.Components.Files.Dialogs.Create.FilesTab]">
                <ChildContent>
                    <MudForm Errors="@(ResourceResponse?.ErrorMessages ?? Array.Empty<string>())">
                        <div class="pt-5">
                            <FileDropzone OnSuccess="@OnSuccess" Destination="@ParentFolder" Color="@Color.Success"/>
                        </div>
                    </MudForm>
                </ChildContent>
            </MudTabPanel>
        </MudTabs>
    </Content>
</Dialog>

@code {
    [Parameter] [EditorRequired] public required FolderOverview ParentFolder { get; set; }
    [Parameter] [EditorRequired] public required bool IsVisible { get; set; }
    [Parameter] [EditorRequired] public required EventCallback<int?> OnSuccess { get; set; }
    [Parameter] [EditorRequired] public required CancellationToken CancellationToken { get; set; }

    public bool IsLoading { get; set; }
    public bool IsDisabled { get; set; }
    public string Name { get; set; } = string.Empty;
    public ResourceResponse? ResourceResponse { get; set; }

    private async Task HandleSubmit()
    {
        IsLoading = true;

        ResourceResponse = await FolderService.Create(ParentFolder, Name, CancellationToken);

        if (ResourceResponse.IsSuccess)
        {
            Name = string.Empty;

            await OnSuccess.InvokeAsync();

            IsVisible = false;
        }

        IsLoading = false;
    }

    protected void HandleDebounceIntervalElapsed()
    {
        ResourceResponse = null;
        IsDisabled = ParentFolder.Name.Equals(Name, StringComparison.Ordinal);
    }
}
