@using Uploadify.Client.Core.Auth.Constants
@inject IStringLocalizer<TranslationDictionary> Localizer

<MudSelect AnchorOrigin="Origin.BottomCenter"
           @bind-Value="@SelectedValue"
           Label="@Localizer[Translations.Components.PermissionSelector.Label]"
           T="Permission"
           Variant="Variant.Outlined">
    @foreach (var permission in _values)
    {
        <MudSelectItem Value="permission">
            <MudText Typo="Typo.body1">
                @Localizer[PermissionTranslationKeys.Values[permission]]
            </MudText>
        </MudSelectItem>
    }
</MudSelect>

@code {
    private RoleOverview? _role;
    private Permission _selectedValue = Permission.None;
    private IEnumerable<Permission> _values = PermissionHelpers.GetValues();

    protected Permission SelectedValue
    {
        get => _selectedValue;
        set
        {
            _selectedValue = value;
            OnSelectedValueChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public RoleOverview? Role
    {
        get => _role;
        set
        {
            _role = value;
            _values = PermissionHelpers.GetDistinctValues(value?.Permission);

            if (!_values.Any(permission => permission.HasFlag(_selectedValue)))
            {
                SelectedValue = _values.First();
            }
        }
    }

    [Parameter] public required EventCallback<Permission> OnSelectedValueChanged { get; set; }

    protected override void OnInitialized()
    {
        _values = PermissionHelpers.GetDistinctValues(Role?.Permission);
        SelectedValue = _values.First();
    }

}
